// Example of using Scripter plugin system

// Load C# syntax plugin
print("Loading C# syntax plugin...");
var pluginLoaded = loadPlugin("csharp");

if (pluginLoaded) {
    print("Plugin loaded successfully!");
    
    // List loaded plugins
    listPlugins();
    
    // Create function with C# syntax
    print("\nCreating function with C# syntax...");
    
    // Example 1: Simple function
    var result1 = CreateFunction("MyFunction", "Func<int, string, string> (argumentInt: int, argumentString: string) => { return \"ok it works\"; }");
    
    if (result1) {
        print("Function MyFunction created successfully!");
    }
    
    // Example 2: Function with mathematical operations
    var result2 = CreateFunction("AddNumbers", "Func<double, double, double> (a: double, b: double) => { return a + b; }");
    
    if (result2) {
        print("Function AddNumbers created successfully!");
    }
    
    // Example 3: Function for string operations
    var result3 = CreateFunction("GreetUser", "Func<string, string> (name: string) => { return \"Hello, \" + name + \"!\"; }");
    
    if (result3) {
        print("Function GreetUser created successfully!");
    }
    
    // Test functions
    print("\nTesting created functions:");
    
    // Call created functions (if they were registered)
    print("Test completed!");
    
} else {
    print("Plugin loading error!");
}

// Type system demonstration
print("\nType system demonstration:");
var number = 42;
var text = "Hello World";
var flag = true;

print("Number type: " + TypeOf(number));
print("String type: " + TypeOf(text));
print("Boolean type: " + TypeOf(flag));

// Type casting
print("\nType casting demonstration:");
var stringNumber = "123";
var convertedNumber = Cast(stringNumber, "int");
print("Original value: " + stringNumber + " (type: " + TypeOf(stringNumber) + ")");
print("After casting to int: " + convertedNumber + " (type: " + TypeOf(convertedNumber) + ")");

print("\nExample completed!");
